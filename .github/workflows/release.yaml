# .github/workflows/release.yaml

on:
  release:
    types: [published]
name: Build Release
jobs:
  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        if: success()
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: JS Install & Bundle
        if: success()
        working-directory: frontend
        run: pnpm install && pnpm run build

      - name: compile and release
        if: success()
        uses: ngs/go-release.action@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOARCH: amd64
          GOOS: linux
          EXTRA_FILES: "LICENSE"
  # release-linux-arm64:
  #   name: release linux/arm64
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: arm64
  #       GOOS: linux
  #       EXTRA_FILES: "LICENSE"
  # release-darwin-amd64:
  #   name: release darwin/amd64
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: amd64
  #       GOOS: darwin
  #       EXTRA_FILES: "LICENSE"
  # release-windows-amd64:
  #   name: release windows/amd64
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: amd64
  #       GOOS: windows
  #       EXTRA_FILES: "LICENSE"
